# datasource，指明有两个数据库
spring.shardingsphere.datasource.names=ds0,ds1
## 数据库1
spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://rm-bp14m38byen9x1gs3mo.mysql.rds.aliyuncs.com:3306/test_1?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&autoReconnectForPools=true&useSSL=false&allowMultiQueries=true&rewriteBatchedStatements=true&serverTimezone=GMT%2B8
spring.shardingsphere.datasource.ds0.username=ai_call_engine
spring.shardingsphere.datasource.ds0.password=#Daily_ai_call_engine
## 数据库2
spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://rm-bp14m38byen9x1gs3mo.mysql.rds.aliyuncs.com:3306/test_2?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&autoReconnectForPools=true&useSSL=false&allowMultiQueries=true&rewriteBatchedStatements=true&serverTimezone=GMT%2B8
spring.shardingsphere.datasource.ds1.username=ai_call_engine
spring.shardingsphere.datasource.ds1.password=#Daily_ai_call_engine

# 数据库分片
## position表分片建，database-strategy=按库分表，table-strategy=按表分库
spring.shardingsphere.sharding.tables.position.database-strategy.inline.sharding-column=id
## position表表达式
spring.shardingsphere.sharding.tables.position.database-strategy.inline.algorithm-expression=ds$->{id % 2}
## position_detail表
spring.shardingsphere.sharding.tables.position_detail.database-strategy.inline.sharding-column=pid
spring.shardingsphere.sharding.tables.position_detail.database-strategy.inline.algorithm-expression=ds$->{pid % 2}

# 内置ID生成器，SNOWFLAKE
spring.shardingsphere.sharding.tables.position.key-generator.column=id
spring.shardingsphere.sharding.tables.position.key-generator.type=SNOWFLAKE
## 自定义主键生成器
#spring.shardingsphere.sharding.tables.position.key-generator.type=YDHKEY
spring.shardingsphere.sharding.tables.position_detail.key-generator.column=id
spring.shardingsphere.sharding.tables.position_detail.key-generator.type=SNOWFLAKE

## 字典表（city），所有库里面都有一份一模一样的
#spring.shardingsphere.sharding.broadcast-tables=city
#spring.shardingsphere.sharding.tables.city.key-generator.column=id
#spring.shardingsphere.sharding.tables.city.key-generator.type=SNOWFLAKE
#
## 卖家/买家的信息各存一份，便于卖家/买家查询自己的数据（b_order0表示卖家b_order1表示买家这里只测试下b_order表）
### company_id来分库
#spring.shardingsphere.sharding.tables.b_order.database-strategy.inline.sharding-column=company_id
#spring.shardingsphere.sharding.tables.b_order.database-strategy.inline.algorithm-expression=ds$->{company_id % 2}
### id来分表
#spring.shardingsphere.sharding.tables.b_order.table-strategy.inline.sharding-column=id
#spring.shardingsphere.sharding.tables.b_order.table-strategy.inline.algorithm-expression=b_order${id % 2}
### 数据节点ds0.b_order0、ds0.b_order1、ds1.b_order0、ds1.b_order1
#spring.shardingsphere.sharding.tables.b_order.actual-data-nodes=ds${0..1}.b_order${0..1}
### 主键
#spring.shardingsphere.sharding.tables.b_order.key-generator.column=id
#spring.shardingsphere.sharding.tables.b_order.key-generator.type=SNOWFLAKE



